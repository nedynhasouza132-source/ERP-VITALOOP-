import React, { useState, useEffect } from 'react';
import { BarChart3, Package, ShoppingCart, ClipboardList, DollarSign, TrendingUp, AlertTriangle, Users, Bell, Settings, LogOut, ChevronRight, Calendar, Clock } from 'lucide-react';

const VitaloopERP = () => {
  const [activeModule, setActiveModule] = useState('dashboard');
  const [notifications, setNotifications] = useState([
    { id: 1, type: 'warning', msg: 'Farinha de trigo vence em 2 dias', time: '10min' },
    { id: 2, type: 'alert', msg: 'Estoque de fermento abaixo do mínimo', time: '1h' },
    { id: 3, type: 'info', msg: '5 encomendas para hoje', time: '2h' }
  ]);

  const [estoque, setEstoque] = useState([
    { id: 1, nome: 'Farinha de Trigo', qtd: 50, unidade: 'kg', validade: '2025-10-18', minimo: 20, status: 'warning' },
    { id: 2, nome: 'Fermento Biológico', qtd: 8, unidade: 'kg', validade: '2025-11-15', minimo: 10, status: 'critical' },
    { id: 3, nome: 'Açúcar', qtd: 80, unidade: 'kg', validade: '2026-03-20', minimo: 30, status: 'ok' },
    { id: 4, nome: 'Ovos', qtd: 150, unidade: 'un', validade: '2025-10-25', minimo: 50, status: 'ok' },
    { id: 5, nome: 'Chocolate em Pó', qtd: 15, unidade: 'kg', validade: '2025-12-10', minimo: 5, status: 'ok' }
  ]);

  const [vendas, setVendas] = useState([
    { id: 1, produto: 'Pão Francês', qtd: 50, valor: 75.00, hora: '08:30' },
    { id: 2, produto: 'Bolo de Chocolate', qtd: 3, valor: 135.00, hora: '09:15' },
    { id: 3, produto: 'Croissant', qtd: 12, valor: 84.00, hora: '10:00' }
  ]);

  const [encomendas, setEncomendas] = useState([
    { id: 1, cliente: 'Maria Silva', produto: 'Bolo Aniversário 3kg', valor: 180, data: '2025-10-18', status: 'producao' },
    { id: 2, cliente: 'João Santos', produto: 'Salgados Diversos 200un', valor: 350, data: '2025-10-17', status: 'pronto' },
    { id: 3, cliente: 'Ana Costa', produto: 'Pão de Mel 50un', valor: 125, data: '2025-10-19', status: 'pendente' }
  ]);

  const [kpis] = useState({
    vendasDia: 1247.50,
    vendasMes: 28340.00,
    perdaMes: 3.2,
    ticketMedio: 32.50,
    margemLiquida: 24.5,
    giroEstoque: 8.5
  });

  const modules = [
    { id: 'dashboard', name: 'Dashboard', icon: BarChart3 },
    { id: 'estoque', name: 'Estoque', icon: Package },
    { id: 'vendas', name: 'PDV', icon: ShoppingCart },
    { id: 'encomendas', name: 'Encomendas', icon: ClipboardList },
    { id: 'financeiro', name: 'Financeiro', icon: DollarSign },
    { id: 'relatorios', name: 'Relatórios', icon: TrendingUp }
  ];

  const getStatusColor = (status) => {
    const colors = {
      ok: 'bg-green-100 text-green-800',
      warning: 'bg-yellow-100 text-yellow-800',
      critical: 'bg-red-100 text-red-800',
      pendente: 'bg-gray-100 text-gray-800',
      producao: 'bg-blue-100 text-blue-800',
      pronto: 'bg-green-100 text-green-800',
      entregue: 'bg-purple-100 text-purple-800'
    };
    return colors[status] || 'bg-gray-100 text-gray-800';
  };

  const getStatusText = (status) => {
    const texts = {
      ok: 'Normal',
      warning: 'Atenção',
      critical: 'Crítico',
      pendente: 'Pendente',
      producao: 'Em Produção',
      pronto: 'Pronto',
      entregue: 'Entregue'
    };
    return texts[status] || status;
  };

  const DashboardModule = () => (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg p-6 text-white shadow-lg">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-blue-100 text-sm">Vendas Hoje</p>
              <p className="text-3xl font-bold mt-1">R$ {kpis.vendasDia.toFixed(2)}</p>
            </div>
            <DollarSign className="w-12 h-12 text-blue-200" />
          </div>
        </div>
        <div className="bg-gradient-to-br from-green-500 to-green-600 rounded-lg p-6 text-white shadow-lg">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-green-100 text-sm">Vendas Mês</p>
              <p className="text-3xl font-bold mt-1">R$ {kpis.vendasMes.toFixed(2)}</p>
            </div>
            <TrendingUp className="w-12 h-12 text-green-200" />
          </div>
        </div>
        <div className="bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg p-6 text-white shadow-lg">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-purple-100 text-sm">Ticket Médio</p>
              <p className="text-3xl font-bold mt-1">R$ {kpis.ticketMedio.toFixed(2)}</p>
            </div>
            <ShoppingCart className="w-12 h-12 text-purple-200" />
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-4 flex items-center">
            <AlertTriangle className="w-5 h-5 mr-2 text-yellow-600" />
            Alertas Críticos
          </h3>
          <div className="space-y-3">
            {estoque.filter(item => item.status === 'warning' || item.status === 'critical').map(item => (
              <div key={item.id} className="flex items-center justify-between p-3 bg-red-50 rounded-lg border border-red-200">
                <div>
                  <p className="font-medium text-gray-800">{item.nome}</p>
                  <p className="text-sm text-gray-600">Estoque: {item.qtd} {item.unidade}</p>
                </div>
                <span className={`px-3 py-1 rounded-full text-xs font-semibold ${getStatusColor(item.status)}`}>
                  {getStatusText(item.status)}
                </span>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-4 flex items-center">
            <ClipboardList className="w-5 h-5 mr-2 text-blue-600" />
            Encomendas Pendentes
          </h3>
          <div className="space-y-3">
            {encomendas.slice(0, 3).map(enc => (
              <div key={enc.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg border border-gray-200">
                <div>
                  <p className="font-medium text-gray-800">{enc.cliente}</p>
                  <p className="text-sm text-gray-600">{enc.produto}</p>
                </div>
                <span className={`px-3 py-1 rounded-full text-xs font-semibold ${getStatusColor(enc.status)}`}>
                  {getStatusText(enc.status)}
                </span>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="bg-white rounded-lg shadow-md p-6">
        <h3 className="text-lg font-semibold mb-4">Indicadores de Desempenho</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="p-4 bg-gradient-to-r from-red-50 to-red-100 rounded-lg">
            <p className="text-sm text-gray-600 mb-1">Perda Mensal</p>
            <p className="text-2xl font-bold text-red-600">{kpis.perdaMes}%</p>
          </div>
          <div className="p-4 bg-gradient-to-r from-green-50 to-green-100 rounded-lg">
            <p className="text-sm text-gray-600 mb-1">Margem Líquida</p>
            <p className="text-2xl font-bold text-green-600">{kpis.margemLiquida}%</p>
          </div>
          <div className="p-4 bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg">
            <p className="text-sm text-gray-600 mb-1">Giro de Estoque</p>
            <p className="text-2xl font-bold text-blue-600">{kpis.giroEstoque} dias</p>
          </div>
        </div>
      </div>
    </div>
  );

  const EstoqueModule = () => (
    <div className="bg-white rounded-lg shadow-md p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold">Controle de Estoque</h2>
        <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition">
          + Novo Item
        </button>
      </div>
      <div className="overflow-x-auto">
        <table className="w-full">
          <thead className="bg-gray-50 border-b-2 border-gray-200">
            <tr>
              <th className="px-4 py-3 text-left text-sm font-semibold text-gray-600">Item</th>
              <th className="px-4 py-3 text-left text-sm font-semibold text-gray-600">Quantidade</th>
              <th className="px-4 py-3 text-left text-sm font-semibold text-gray-600">Validade</th>
              <th className="px-4 py-3 text-left text-sm font-semibold text-gray-600">Status</th>
              <th className="px-4 py-3 text-left text-sm font-semibold text-gray-600">Ações</th>
            </tr>
          </thead>
          <tbody className="divide-y divide-gray-200">
            {estoque.map(item => (
              <tr key={item.id} className="hover:bg-gray-50">
                <td className="px-4 py-3">
                  <p className="font-medium text-gray-800">{item.nome}</p>
                  <p className="text-sm text-gray-500">Mínimo: {item.minimo} {item.unidade}</p>
                </td>
                <td className="px-4 py-3 font-semibold">{item.qtd} {item.unidade}</td>
                <td className="px-4 py-3 text-gray-600">{item.validade}</td>
                <td className="px-4 py-3">
                  <span className={`px-3 py-1 rounded-full text-xs font-semibold ${getStatusColor(item.status)}`}>
                    {getStatusText(item.status)}
                  </span>
                </td>
                <td className="px-4 py-3">
                  <button className="text-blue-600 hover:text-blue-800 text-sm font-medium">
                    Editar
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );

  const VendasModule = () => (
    <div className="space-y-6">
      <div className="bg-white rounded-lg shadow-md p-6">
        <h2 className="text-2xl font-bold mb-4">Ponto de Venda (PDV)</h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {['Pão Francês', 'Pão de Forma', 'Croissant', 'Bolo Chocolate', 'Sonho', 'Torta', 'Salgados', 'Café'].map((produto, idx) => (
            <button key={idx} className="p-4 bg-blue-50 hover:bg-blue-100 rounded-lg border-2 border-blue-200 transition">
              <p className="font-semibold text-gray-800">{produto}</p>
            </button>
          ))}
        </div>
      </div>

      <div className="bg-white rounded-lg shadow-md p-6">
        <h3 className="text-xl font-semibold mb-4">Vendas Recentes</h3>
        <div className="space-y-3">
          {vendas.map(venda => (
            <div key={venda.id} className="flex items-center justify-between p-4 bg-gray-50 rounded-lg border border-gray-200">
              <div>
                <p className="font-medium text-gray-800">{venda.produto}</p>
                <p className="text-sm text-gray-600">{venda.qtd}x unidades • {venda.hora}</p>
              </div>
              <p className="text-lg font-bold text-green-600">R$ {venda.valor.toFixed(2)}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  const EncomendasModule = () => (
    <div className="bg-white rounded-lg shadow-md p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold">Gestão de Encomendas</h2>
        <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition">
          + Nova Encomenda
        </button>
      </div>
      <div className="space-y-4">
        {encomendas.map(enc => (
          <div key={enc.id} className="p-5 border-2 border-gray-200 rounded-lg hover:border-blue-300 transition">
            <div className="flex justify-between items-start mb-3">
              <div>
                <p className="text-lg font-bold text-gray-800">{enc.cliente}</p>
                <p className="text-gray-600">{enc.produto}</p>
              </div>
              <span className={`px-3 py-1 rounded-full text-xs font-semibold ${getStatusColor(enc.status)}`}>
                {getStatusText(enc.status)}
              </span>
            </div>
            <div className="flex justify-between items-center pt-3 border-t border-gray-200">
              <div className="flex items-center text-gray-600 text-sm">
                <Calendar className="w-4 h-4 mr-1" />
                <span>{enc.data}</span>
              </div>
              <p className="text-xl font-bold text-blue-600">R$ {enc.valor.toFixed(2)}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const FinanceiroModule = () => (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-xl font-semibold mb-4">Resumo do Caixa</h3>
          <div className="space-y-3">
            <div className="flex justify-between items-center p-3 bg-green-50 rounded-lg">
              <span className="text-gray-700">Entradas</span>
              <span className="text-xl font-bold text-green-600">R$ 3.240,00</span>
            </div>
            <div className="flex justify-between items-center p-3 bg-red-50 rounded-lg">
              <span className="text-gray-700">Saídas</span>
              <span className="text-xl font-bold text-red-600">R$ 1.850,00</span>
            </div>
            <div className="flex justify-between items-center p-3 bg-blue-50 rounded-lg border-2 border-blue-200">
              <span className="text-gray-700 font-semibold">Saldo</span>
              <span className="text-2xl font-bold text-blue-600">R$ 1.390,00</span>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-xl font-semibold mb-4">Fluxo de Caixa (7 dias)</h3>
          <div className="space-y-2">
            {[
              { dia: 'Seg', valor: 1247 },
              { dia: 'Ter', valor: 1580 },
              { dia: 'Qua', valor: 1320 },
              { dia: 'Qui', valor: 1890 },
              { dia: 'Sex', valor: 2100 },
              { dia: 'Sáb', valor: 2450 },
              { dia: 'Dom', valor: 1650 }
            ].map((item, idx) => (
              <div key={idx} className="flex items-center">
                <span className="w-12 text-sm text-gray-600">{item.dia}</span>
                <div className="flex-1 bg-gray-200 rounded-full h-6 overflow-hidden">
                  <div 
                    className="bg-gradient-to-r from-blue-500 to-blue-600 h-full rounded-full flex items-center justify-end pr-2"
                    style={{ width: `${(item.valor / 2500) * 100}%` }}
                  >
                    <span className="text-xs text-white font-semibold">R$ {item.valor}</span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  const RelatoriosModule = () => (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-xl font-semibold mb-4">Produtos Mais Vendidos</h3>
          <div className="space-y-3">
            {[
              { nome: 'Pão Francês', vendas: 1250, receita: 1875 },
              { nome: 'Bolo Chocolate', vendas: 85, receita: 3825 },
              { nome: 'Croissant', vendas: 320, receita: 2240 },
              { nome: 'Sonho', vendas: 180, receita: 1260 }
            ].map((prod, idx) => (
              <div key={idx} className="p-3 bg-gray-50 rounded-lg border border-gray-200">
                <div className="flex justify-between items-center mb-1">
                  <span className="font-medium text-gray-800">{prod.nome}</span>
                  <span className="text-sm font-semibold text-blue-600">R$ {prod.receita}</span>
                </div>
                <p className="text-sm text-gray-600">{prod.vendas} unidades vendidas</p>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-xl font-semibold mb-4">Análise de Desperdício</h3>
          <div className="space-y-4">
            <div className="p-4 bg-red-50 rounded-lg border border-red-200">
              <p className="text-sm text-gray-600 mb-1">Perda Total (Mês)</p>
              <p className="text-3xl font-bold text-red-600">R$ 487,20</p>
              <p className="text-sm text-gray-500 mt-1">3.2% do faturamento</p>
            </div>
            <div className="space-y-2">
              <p className="text-sm font-semibold text-gray-700">Principais Perdas:</p>
              {[
                { item: 'Pães', valor: 180 },
                { item: 'Bolos', valor: 150 },
                { item: 'Salgados', valor: 95 }
              ].map((item, idx) => (
                <div key={idx} className="flex justify-between text-sm">
                  <span className="text-gray-600">{item.item}</span>
                  <span className="font-semibold text-red-600">R$ {item.valor}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderModule = () => {
    switch(activeModule) {
      case 'dashboard': return <DashboardModule />;
      case 'estoque': return <EstoqueModule />;
      case 'vendas': return <VendasModule />;
      case 'encomendas': return <EncomendasModule />;
      case 'financeiro': return <FinanceiroModule />;
      case 'relatorios': return <RelatoriosModule />;
      default: return <DashboardModule />;
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 flex">
      {/* Sidebar */}
      <div className="w-64 bg-gradient-to-b from-blue-900 to-blue-800 text-white flex flex-col">
        <div className="p-6 border-b border-blue-700">
          <h1 className="text-2xl font-bold">Vitaloop ERP</h1>
          <p className="text-blue-300 text-sm mt-1">Gestão Inteligente</p>
        </div>
        
        <nav className="flex-1 p-4 space-y-2">
          {modules.map(module => {
            const Icon = module.icon;
            return (
              <button
                key={module.id}
                onClick={() => setActiveModule(module.id)}
                className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg transition ${
                  activeModule === module.id 
                    ? 'bg-blue-600 text-white shadow-lg' 
                    : 'text-blue-200 hover:bg-blue-700'
                }`}
              >
                <Icon className="w-5 h-5" />
                <span className="font-medium">{module.name}</span>
              </button>
            );
          })}
        </nav>

        <div className="p-4 border-t border-blue-700 space-y-2">
          <button className="w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-blue-200 hover:bg-blue-700 transition">
            <Settings className="w-5 h-5" />
            <span>Configurações</span>
          </button>
          <button className="w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-blue-200 hover:bg-blue-700 transition">
            <LogOut className="w-5 h-5" />
            <span>Sair</span>
          </button>
        </div>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex flex-col">
        {/* Header */}
        <header className="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-2xl font-bold text-gray-800">
                {modules.find(m => m.id === activeModule)?.name || 'Dashboard'}
              </h2>
              <p className="text-gray-500 text-sm">Quinta-feira, 16 de Outubro de 2025</p>
            </div>
            
            <div className="flex items-center space-x-4">
              <div className="relative">
                <button className="p-2 rounded-lg hover:bg-gray-100 relative">
                  <Bell className="w-6 h-6 text-gray-600" />
                  <span className="absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full"></span>
                </button>
              </div>
              <div className="flex items-center space-x-3">
                <div className="text-right">
                  <p className="font-semibold text-gray-800">Admin</p>
                  <p className="text-xs text-gray-500">Gerente</p>
                </div>
                <div className="w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center">
                  <Users className="w-6 h-6 text-white" />
                </div>
              </div>
            </div>
          </div>
        </header>

        {/* Content Area */}
        <main className="flex-1 p-6 overflow-y-auto">
          {renderModule()}
        </main>
      </div>
    </div>
  );
};

export default VitaloopERP;